webpackHotUpdatereactAudioplayer(0,{

/***/ "../../src/components/HOCAudio.jsx":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(\"../../node_modules/react/react.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar HOCAudio = function HOCAudio(Audio) {\n  var _class, _temp;\n\n  return _temp = _class = function (_React$Component) {\n    _inherits(HOCAudioComponent, _React$Component);\n\n    function HOCAudioComponent(props) {\n      _classCallCheck(this, HOCAudioComponent);\n\n      var _this = _possibleConstructorReturn(this, (HOCAudioComponent.__proto__ || Object.getPrototypeOf(HOCAudioComponent)).call(this, props));\n\n      if (!_this.props.playlist || _this.props.playlist.length === 0) {\n        throw new Error('You should provide a playlist which contains at least 1 audio object');\n      }\n      if (_this.props.fullPlayer) {\n        _this.props.playlist.forEach(function (song) {\n          if (!song.img) {\n            throw new Error('You should provide song.img when the fullPlayer is enabled.');\n          }\n          if (_this.props.comment && !song.comments) {\n            throw new Error('You turned on commenting function and you need to provide the `comments` field for each song in the playlist');\n          }\n        });\n      }\n\n      // bind methods\n      _this.playNext = props.autoPlay; // A boolean to determine whether to play the next song or not\n      _this.loadSrc = _this.loadSrc.bind(_this);\n      _this.togglePlayPause = _this.togglePlayPause.bind(_this);\n      _this.onCanPlay = _this.onCanPlay.bind(_this);\n      _this.onEnded = _this.onEnded.bind(_this);\n      _this.onPlay = _this.onPlay.bind(_this);\n      _this.onPause = _this.onPause.bind(_this);\n      // this.onTimeUpdate = this.onTimeUpdate.bind(this);\n      _this.setVolume = _this.setVolume.bind(_this);\n      _this.setProgress = _this.setProgress.bind(_this);\n      _this.skipToNext = _this.skipToNext.bind(_this);\n      _this.skipToPrevious = _this.skipToPrevious.bind(_this);\n      _this.togglePlayingState = _this.togglePlayingState.bind(_this);\n\n      var discardPileSize = Math.ceil(props.playlist.length / 2);\n      _this.state = {\n        playing: false,\n        currentPlaylistPos: 0,\n        playingState: 0, // 0: cycle, 1: repeat, 2: shuffle\n        progress: 0,\n        duration: 0,\n        volume: 1,\n        shuffleState: {\n          size: discardPileSize,\n          drawPile: [].concat(_toConsumableArray(Array(props.playlist.length).keys())), // initialise full playlist indexes\n          discardPile: []\n        }\n      };\n      return _this;\n    }\n\n    _createClass(HOCAudioComponent, [{\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // console.log('Audio mounted!');\n        // set audio element event listeners\n        this.audioElement = document.createElement('audio');\n        this.audioElement.addEventListener('canplay', this.onCanPlay);\n        this.audioElement.addEventListener('ended', this.onEnded);\n        this.audioElement.addEventListener('play', this.onPlay);\n        this.audioElement.addEventListener('pause', this.onPause);\n        this.audioElement.addEventListener('volumechange', this.onVolumeChange);\n        // this.audioElement.addEventListener('timeupdate', this.onTimeUpdate);\n\n        this.loadSrc();\n        this.setState({ volume: this.audioElement.volume });\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        this._clearInterval();\n        this.audioElement.removeEventListener('canplay', this.onCanPlay);\n        this.audioElement.removeEventListener('ended', this.onEnded);\n        this.audioElement.removeEventListener('play', this.onPlay);\n        this.audioElement.removeEventListener('pause', this.onPause);\n        this.audioElement.removeEventListener('volumechange', this.onVolumeChange);\n        this.audioElement = null;\n      }\n    }, {\n      key: 'onCanPlay',\n      value: function onCanPlay() {\n        // console.log('audio oncanplay');\n        this.playNext = this.state.playing;\n        this.setState({\n          duration: this.audioElement.duration\n        });\n      }\n    }, {\n      key: 'onPlay',\n      value: function onPlay() {\n        var _this2 = this;\n\n        // console.log('audio onplay');\n        this.playNext = true;\n        this.setState({ playing: true });\n        this.intervalId = setInterval(function () {\n          _this2.setState({ progress: _this2.audioElement.currentTime });\n        }, 900);\n        this.props.onTogglePlayPause(true);\n      }\n    }, {\n      key: 'onPause',\n      value: function onPause() {\n        // console.log('audio onpause');\n        this.setState({ playing: false });\n        this._clearInterval();\n        this.props.onTogglePlayPause(false);\n      }\n    }, {\n      key: 'onEnded',\n      value: function onEnded() {\n        // console.log('audio onended');\n        if (this.playNext) {\n          this.handleEndedProgress();\n          this.props.onTogglePlayPause(false);\n        }\n      }\n      // onTimeUpdate(e) {\n      //   this.setState({ progress: this.audioElement.currentTime });\n      //   console.log(e.target.currentTime);\n      // }\n\n    }, {\n      key: 'handleEndedProgress',\n      value: function handleEndedProgress() {\n        this.playNext = true;\n        switch (this.state.playingState) {\n          case 0:\n            {\n              this.skipToNext();\n              break;\n            }\n          case 1:\n            {\n              this.setState({ progress: 0 });\n              this.audioElement.currentTime = 0;\n              this.togglePlayPause();\n              break;\n            }\n          case 2:\n            {\n              var ss = this.state.shuffleState;\n              var currentSongIndex = ss.drawPile.indexOf(this.state.currentPlaylistPos);\n              var newDrawPile = ss.drawPile;\n              var newDiscardPile = ss.discardPile;\n              if (currentSongIndex !== -1) {\n                newDrawPile.splice(currentSongIndex, 1);\n                newDiscardPile.push(this.state.currentPlaylistPos);\n              }\n              var index = Math.floor(Math.random() * ss.drawPile.length);\n              var sliced = newDrawPile.slice(index, index + 1);\n              this.setState({\n                currentPlaylistPos: sliced[0],\n                shuffleState: {\n                  size: ss.size,\n                  drawPile: newDrawPile,\n                  discardPile: newDiscardPile\n                }\n              });\n              if (newDiscardPile.length === ss.size) {\n                var shiftedElement = newDiscardPile.shift();\n                newDrawPile.push(shiftedElement);\n                this.setState({\n                  shuffleState: {\n                    size: ss.size,\n                    drawPile: newDrawPile,\n                    discardPile: newDiscardPile\n                  }\n                });\n              }\n              this.loadSrc();\n              break;\n            }\n          default:\n            {\n              // console.log('onend BUG!!!');\n              break;\n            }\n        }\n      }\n    }, {\n      key: 'setVolume',\n      value: function setVolume(volume) {\n        // console.log(`volume is set to ${volume}`);\n        this.audioElement.volume = volume;\n        this.setState({ volume: volume });\n      }\n    }, {\n      key: 'setProgress',\n      value: function setProgress(newProgress) {\n        var progress = newProgress;\n        var duration = this.audioElement.duration;\n        if (progress > duration) {\n          progress = duration;\n        }\n        this.audioElement.currentTime = progress;\n        this.setState({ progress: progress });\n        // console.log(`progress is set to ${progress}`);\n      }\n    }, {\n      key: '_clearInterval',\n      value: function _clearInterval() {\n        // console.log('interval cleared');\n        if (this.intervalId !== null) {\n          clearInterval(this.intervalId);\n          this.intervalId = null;\n        }\n      }\n    }, {\n      key: 'loadSrc',\n      value: function loadSrc() {\n        // console.log('load src');\n        var currentPlaylistPos = this.state;\n        if (currentPlaylistPos < this.props.playlist.length) {\n          this.audioElement.src = this.props.playlist[currentPlaylistPos].src;\n          this.audioElement.load();\n          if (this.playNext) {\n            this.audioElement.play();\n          }\n          this.setState({ progress: 0 });\n          this._clearInterval();\n        }\n        this.props.onSongChange(currentPlaylistPos);\n      }\n    }, {\n      key: 'togglePlayPause',\n      value: function togglePlayPause() {\n        // console.log('toggle playpause');\n        if (this.state.playing) {\n          // console.log('togglePlayPause(): playing');\n          this.audioElement.pause();\n        } else if (this.audioElement.currentTime === this.audioElement.duration) {\n          this.handleEndedProgress();\n        } else {\n          this.audioElement.play();\n        }\n      }\n    }, {\n      key: 'skipToNext',\n      value: function skipToNext() {\n        // console.log('skip to next');\n        this.state.currentPlaylistPos = this.setCycleNumPos(this.state.currentPlaylistPos, 1, this.props.playlist.length);\n        this.loadSrc();\n      }\n    }, {\n      key: 'skipToPrevious',\n      value: function skipToPrevious() {\n        // console.log('skip to next');\n        this.state.currentPlaylistPos = this.setCycleNumPos(this.state.currentPlaylistPos, -1, this.props.playlist.length);\n        this.loadSrc();\n      }\n    }, {\n      key: 'togglePlayingState',\n      value: function togglePlayingState() {\n        this.setState({\n          playingState: this.setCycleNumPos(this.state.playingState, 1, 3)\n        });\n      }\n    }, {\n      key: 'setCycleNumPos',\n      value: function setCycleNumPos(currentVal, change, length) {\n        var newPos = currentVal + change;\n        if (newPos >= length) {\n          newPos -= length;\n        }\n        if (newPos < 0) {\n          newPos += length;\n        }\n        return newPos;\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var newProps = _extends({}, {\n          name: this.props.playlist[this.state.currentPlaylistPos].name,\n          CommentsWrapperStates: {\n            songImageSrc: this.props.playlist[this.state.currentPlaylistPos].img,\n            comments: this.props.fullPlayer && this.props.comment ? this.props.playlist[this.state.currentPlaylistPos].comments : null,\n            pos: this.state.currentPlaylistPos\n          },\n          controlStates: {\n            playing: this.state.playing,\n            playingState: this.state.playingState,\n            volume: this.state.volume * 100\n          },\n          controlCallbacks: {\n            setVolume: this.setVolume,\n            togglePlayPause: this.togglePlayPause,\n            togglePlayingState: this.togglePlayingState,\n            skipToNext: this.skipToNext,\n            skipToPrevious: this.skipToPrevious\n          },\n          timelineStates: {\n            playing: this.state.playing,\n            progress: this.state.progress,\n            duration: this.state.duration\n          },\n          timelineCallbacks: {\n            setProgress: this.setProgress,\n            togglePlayPause: this.togglePlayPause\n          },\n          children: this.props.children\n        }, this.props);\n        return _react2.default.createElement(Audio, newProps);\n      }\n    }]);\n\n    return HOCAudioComponent;\n  }(_react2.default.Component), Object.defineProperty(_class, 'propTypes', {\n    enumerable: true,\n    writable: true,\n    value: {\n      playlist: _react.PropTypes.arrayOf(_react.PropTypes.shape({\n        name: _react.PropTypes.string,\n        src: _react.PropTypes.string,\n        img: _react.PropTypes.string,\n        onSongChange: _react.PropTypes.func,\n        onTogglePlayPause: _react.PropTypes.func,\n        comments: _react.PropTypes.arrayOf(_react.PropTypes.shape({\n          time: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),\n          content: _react.PropTypes.string\n        }))\n      })).isRequired\n    }\n  }), _temp;\n};\n\nvar _default = HOCAudio;\nexports.default = _default;\n;\n\nvar _temp2 = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(HOCAudio, 'HOCAudio', '/Users/joelpaulino/Documents/dev/react-audioplayer/src/components/HOCAudio.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/joelpaulino/Documents/dev/react-audioplayer/src/components/HOCAudio.jsx');\n}();\n\n;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

})